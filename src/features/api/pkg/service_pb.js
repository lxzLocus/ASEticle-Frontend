// source: service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.searchscholar.SearchResult', null, global);
goog.exportSymbol('proto.searchscholar.SearchScholarRequest', null, global);
goog.exportSymbol('proto.searchscholar.SearchScholarResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searchscholar.SearchScholarRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searchscholar.SearchScholarRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searchscholar.SearchScholarRequest.displayName = 'proto.searchscholar.SearchScholarRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searchscholar.SearchScholarResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searchscholar.SearchScholarResponse.repeatedFields_, null);
};
goog.inherits(proto.searchscholar.SearchScholarResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searchscholar.SearchScholarResponse.displayName = 'proto.searchscholar.SearchScholarResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searchscholar.SearchResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searchscholar.SearchResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searchscholar.SearchResult.displayName = 'proto.searchscholar.SearchResult';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searchscholar.SearchScholarRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.searchscholar.SearchScholarRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searchscholar.SearchScholarRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searchscholar.SearchScholarRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searchscholar.SearchScholarRequest}
 */
proto.searchscholar.SearchScholarRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searchscholar.SearchScholarRequest;
  return proto.searchscholar.SearchScholarRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searchscholar.SearchScholarRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searchscholar.SearchScholarRequest}
 */
proto.searchscholar.SearchScholarRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searchscholar.SearchScholarRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searchscholar.SearchScholarRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searchscholar.SearchScholarRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searchscholar.SearchScholarRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.searchscholar.SearchScholarRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searchscholar.SearchScholarRequest} returns this
 */
proto.searchscholar.SearchScholarRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searchscholar.SearchScholarResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searchscholar.SearchScholarResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.searchscholar.SearchScholarResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searchscholar.SearchScholarResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searchscholar.SearchScholarResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.searchscholar.SearchResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searchscholar.SearchScholarResponse}
 */
proto.searchscholar.SearchScholarResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searchscholar.SearchScholarResponse;
  return proto.searchscholar.SearchScholarResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searchscholar.SearchScholarResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searchscholar.SearchScholarResponse}
 */
proto.searchscholar.SearchScholarResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.searchscholar.SearchResult;
      reader.readMessage(value,proto.searchscholar.SearchResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searchscholar.SearchScholarResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searchscholar.SearchScholarResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searchscholar.SearchScholarResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searchscholar.SearchScholarResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.searchscholar.SearchResult.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SearchResult results = 1;
 * @return {!Array<!proto.searchscholar.SearchResult>}
 */
proto.searchscholar.SearchScholarResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.searchscholar.SearchResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.searchscholar.SearchResult, 1));
};


/**
 * @param {!Array<!proto.searchscholar.SearchResult>} value
 * @return {!proto.searchscholar.SearchScholarResponse} returns this
*/
proto.searchscholar.SearchScholarResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.searchscholar.SearchResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.searchscholar.SearchResult}
 */
proto.searchscholar.SearchScholarResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.searchscholar.SearchResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searchscholar.SearchScholarResponse} returns this
 */
proto.searchscholar.SearchScholarResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searchscholar.SearchResult.prototype.toObject = function(opt_includeInstance) {
  return proto.searchscholar.SearchResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searchscholar.SearchResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searchscholar.SearchResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    author: jspb.Message.getFieldWithDefault(msg, 3, ""),
    conference: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pages: jspb.Message.getFieldWithDefault(msg, 5, 0),
    date: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pb_abstract: jspb.Message.getFieldWithDefault(msg, 7, ""),
    citeNum: jspb.Message.getFieldWithDefault(msg, 8, 0),
    submitted: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    relevantNo: jspb.Message.getFieldWithDefault(msg, 10, 0),
    tier: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searchscholar.SearchResult}
 */
proto.searchscholar.SearchResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searchscholar.SearchResult;
  return proto.searchscholar.SearchResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searchscholar.SearchResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searchscholar.SearchResult}
 */
proto.searchscholar.SearchResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConference(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPages(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbstract(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCiteNum(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSubmitted(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRelevantNo(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searchscholar.SearchResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searchscholar.SearchResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searchscholar.SearchResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searchscholar.SearchResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAuthor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConference();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPages();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAbstract();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCiteNum();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getSubmitted();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getRelevantNo();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getTier();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.searchscholar.SearchResult.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searchscholar.SearchResult} returns this
 */
proto.searchscholar.SearchResult.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.searchscholar.SearchResult.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.searchscholar.SearchResult} returns this
 */
proto.searchscholar.SearchResult.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string author = 3;
 * @return {string}
 */
proto.searchscholar.SearchResult.prototype.getAuthor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.searchscholar.SearchResult} returns this
 */
proto.searchscholar.SearchResult.prototype.setAuthor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string conference = 4;
 * @return {string}
 */
proto.searchscholar.SearchResult.prototype.getConference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.searchscholar.SearchResult} returns this
 */
proto.searchscholar.SearchResult.prototype.setConference = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 pages = 5;
 * @return {number}
 */
proto.searchscholar.SearchResult.prototype.getPages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.searchscholar.SearchResult} returns this
 */
proto.searchscholar.SearchResult.prototype.setPages = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string date = 6;
 * @return {string}
 */
proto.searchscholar.SearchResult.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.searchscholar.SearchResult} returns this
 */
proto.searchscholar.SearchResult.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string abstract = 7;
 * @return {string}
 */
proto.searchscholar.SearchResult.prototype.getAbstract = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.searchscholar.SearchResult} returns this
 */
proto.searchscholar.SearchResult.prototype.setAbstract = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 cite_num = 8;
 * @return {number}
 */
proto.searchscholar.SearchResult.prototype.getCiteNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.searchscholar.SearchResult} returns this
 */
proto.searchscholar.SearchResult.prototype.setCiteNum = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool submitted = 9;
 * @return {boolean}
 */
proto.searchscholar.SearchResult.prototype.getSubmitted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.searchscholar.SearchResult} returns this
 */
proto.searchscholar.SearchResult.prototype.setSubmitted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 relevant_no = 10;
 * @return {number}
 */
proto.searchscholar.SearchResult.prototype.getRelevantNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.searchscholar.SearchResult} returns this
 */
proto.searchscholar.SearchResult.prototype.setRelevantNo = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 tier = 11;
 * @return {number}
 */
proto.searchscholar.SearchResult.prototype.getTier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.searchscholar.SearchResult} returns this
 */
proto.searchscholar.SearchResult.prototype.setTier = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


goog.object.extend(exports, proto.searchscholar);
